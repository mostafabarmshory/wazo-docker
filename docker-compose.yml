version: '3.8'
services:
  nginx:
    image: nginx
    ports:
      - '127.0.0.1:8443:443'
    volumes:
      - ./etc/nginx.conf:/etc/nginx/conf.d/config.conf:ro
      - ./certs:/certs:ro

  postgres:
    image: postgres:11  # Must use compatible version than the odbc_postgresql installed in asterisk container
    environment:
      POSTGRES_DB: wazo
      POSTGRES_USER: asterisk  # reason: hardcoded in populate.sql
      POSTGRES_PASSWORD: secret
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    expose:
      - "5432"

  rabbitmq:
    image: rabbitmq
    expose:
      - "5672"
    volumes:
      - tmp-rabbitmq:/var/lib/rabbitmq:rw

  auth:
    image: wazoplatform/wazo-auth
    expose:
      - 9497
    environment:
      TZ: America/Montreal
      XIVO_UUID: "00000000-0000-4000-8000-0000000AA450"
    volumes:
      - ./etc/wazo-auth.yml:/etc/wazo-auth/conf.d/config.yml:ro
      - ./bin/init-helpers:/var/lib/wazo/helpers:ro
      - type: bind
        source: ${LOCAL_GIT_REPOS}/wazo-auth-keys/etc/wazo-auth/conf.d/50-wazo-default-policies.yml
        target: /etc/wazo-auth/conf.d/50-wazo-default-policies.yml
        read_only: true

  confd:
    image: wazoplatform/wazo-confd:manage-db
    build:
      context: .
      dockerfile: Dockerfile-confd
    expose:
      - 9486
    environment:
      XIVO_UUID: "00000000-0000-4000-8000-0000000AA450"
      INIT_TIMEOUT: 120
    volumes:
      - ./etc/wazo-confd.yml:/etc/wazo-confd/conf.d/config.yml:ro
      - ./etc/xivo-dao.yml:/etc/xivo-dao/conf.d/config.yml:ro
      - ./bin/init-confd:/bin/wazo-confd/init:ro
      - ./bin/init-helpers:/var/lib/wazo/helpers:ro
      - wazo-auth-keys:/var/lib/wazo-auth-keys:ro
      - asterisk-autoprov:/etc/asterisk/pjsip.d:rw  # write 05-autoprov-wizard.conf
      - asterisk-doc:/var/lib/wazo-confd/asterisk-doc:ro
      - type: bind
        source: ${LOCAL_GIT_REPOS}/xivo-manage-db
        target: /usr/share/xivo-manage-db
        read_only: true
    entrypoint:
      - /bin/wazo-confd/init

  provd:
    image: wazoplatform/wazo-provd:confgend
    build:
      context: .
      dockerfile: Dockerfile-provd
    environment:
      INIT_TIMEOUT: 120
    expose:
      - 8666
    volumes:
      - ./etc/wazo-confgend-client.conf:/etc/wazo-confgend-client/config.conf:ro
      - ./etc/wazo-provd.yml:/etc/wazo-provd/conf.d/config.yml:ro
      - ./bin/init-provd:/bin/wazo-provd/init:ro
      - ./bin/init-helpers:/var/lib/wazo/helpers:ro
      - wazo-auth-keys:/var/lib/wazo-auth-keys:ro
    entrypoint:
      - /bin/wazo-provd/init

  sysconfd:
    image: wazoplatform/wazo-sysconfd-mock
    expose:
      - 8668

  webhookd:
    image: wazoplatform/wazo-webhookd:netcat
    build:
      context: .
      dockerfile: Dockerfile-webhookd
    expose:
      - 9300
    environment:
      XIVO_UUID: "00000000-0000-4000-8000-0000000AA450"
      INIT_TIMEOUT: 120
    volumes:
      - ./etc/wazo-webhookd.yml:/etc/wazo-webhookd/conf.d/config.yml:ro
      - ./bin/init-webhookd:/bin/wazo-webhookd/init:ro
      - ./bin/init-helpers:/var/lib/wazo/helpers:ro
      - wazo-auth-keys:/var/lib/wazo-auth-keys:ro
      - type: bind
        source: ${LOCAL_GIT_REPOS}/wazo-webhookd
        target: /usr/src/wazo-webhookd  # include alembic script
        read_only: true
    entrypoint:
      - /bin/wazo-webhookd/init

  asterisk:
    image: wazoplatform/asterisk:sounds
    build:
      context: .
      dockerfile: Dockerfile-asterisk
    expose:
      - "5039"
    ports:
      - '5060:5060/udp'  # SIP
      - '19980-20000:19980-20000/udp'  # RTP
    volumes:
      - ./bin/init-helpers:/var/lib/wazo/helpers:ro
      - ./etc/wazo-confgend-client.conf:/etc/wazo-confgend-client/config.conf:ro
      - ./etc/asterisk-http.conf:/etc/asterisk/http.d/02-docker.conf:ro
      - ./etc/asterisk-extensions.conf:/etc/asterisk/extensions.d/02-docker.conf:ro
      - ./etc/asterisk-odbc.ini:/etc/odbc.ini:ro
      - ./etc/asterisk-res_odbc.conf:/etc/asterisk/res_odbc.d/02-docker.conf:ro
      - ./bin/init-asterisk:/bin/asterisk/init:ro
      - asterisk-autoprov:/etc/asterisk/pjsip.d:rw
      - asterisk-doc:/usr/share/asterisk/documentation:rw
      # xivo-config has too much dependencies to be installed in the container
      - type: bind
        source: ${LOCAL_GIT_REPOS}/xivo-config/etc/xivo/asterisk
        target: /etc/xivo/asterisk
        read_only: true
      - type: bind
        source: ${LOCAL_GIT_REPOS}/xivo-config/dialplan/asterisk
        target: /usr/share/xivo-config/dialplan/asterisk
        read_only: true
    entrypoint:
      - /bin/asterisk/init

  confgend:
    image: wazoplatform/wazo-confgend
    expose:
      - 8669
    volumes:
      - ./etc/wazo-confgend.yml:/etc/wazo-confgend/conf.d/config.yml:ro

  agid:
    image: wazoplatform/wazo-agid:netcat
    build:
      context: .
      dockerfile: Dockerfile-agid
    expose:
      - 4573
    volumes:
      - ./bin/init-helpers:/var/lib/wazo/helpers:ro
      - ./etc/wazo-agid.yml:/etc/wazo-agid/conf.d/config.yml:ro
      - wazo-auth-keys:/var/lib/wazo-auth-keys:ro
      # xivo-config has too much dependencies to be installed in the container
      - type: bind
        source: ${LOCAL_GIT_REPOS}/xivo-config/etc/xivo
        target: /etc/xivo
        read_only: true

  dird:
    image: wazoplatform/wazo-dird:netcat
    build:
      context: .
      dockerfile: Dockerfile-dird
    expose:
      - 9489
    volumes:
      - ./bin/init-helpers:/var/lib/wazo/helpers:ro
      - ./bin/init-dird:/bin/wazo-dird/init:ro
      - ./etc/wazo-dird.yml:/etc/wazo-dird/conf.d/config.yml:ro
      - wazo-auth-keys:/var/lib/wazo-auth-keys:ro
      - type: bind
        source: ${LOCAL_GIT_REPOS}/wazo-dird
        target: /usr/src/wazo-dird  # include alembic script
        read_only: true
    entrypoint:
      - /bin/wazo-dird/init

  ui:
    image: wazoplatform/wazo-ui
    expose:
      - 9296
    volumes:
      - ./etc/wazo-ui.yml:/etc/wazo-ui/conf.d/config.yml:ro

  bootstrap:
    image: wazoplatform/uc-bootstrap
    build:
      context: .
      dockerfile: Dockerfile-bootstrap
    environment:
      INIT_TIMEOUT: 120
    volumes:
      - ./bin/init-bootstrap:/bin/platform-bootstrap/init:ro
      - ./etc/wazo-auth-cli.yml:/etc/wazo-auth-cli/conf.d/config.yml:ro
      - wazo-auth-keys:/var/lib/wazo-auth-keys:rw
      - type: bind
        source: ${LOCAL_GIT_REPOS}/wazo-auth-keys/etc/wazo-auth-keys/config.yml
        target: /etc/wazo-auth-keys/config.yml
        read_only: true
    entrypoint:
      - /bin/platform-bootstrap/init

volumes:
  pgdata:
  wazo-auth-keys:
  asterisk-autoprov:
  asterisk-doc:
  tmp-rabbitmq:   # Compatibility for non-Linux systems
